@model CarServiceMS.Models.BindingModels.UsersListingModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<!DOCTYPE html>
<html lang="en">

</html>
<head>

    <link rel="stylesheet" type="text/css" href="~/css/CarTable.css">
</head>

<body>



    @if (@Model.Users != null)
    {
        @if (Model.Users.Any(user => user.Role == "User"))
        {

            <h1 align="center" style="color: black">Users</h1>

            <div style="overflow-x:auto;">
                <table class="table-fill" style="table-layout:auto;">

                    <thead >
                        <tr>
                            <th  class="text-center" colspan="2">
                                <input id="search-box" class="form-control input" onkeyup="search()" type="text" placeholder="Search..." />
                            </th>


                            <th colspan="2">


                                <input style="margin-left:15px"  type="checkbox" id="checkbox-admin" onclick="search()">
                                <span style="margin-right:40px">Admin</span>

                                <input  type="checkbox" id="checkbox-user" onclick="search()">
                                <span style="margin-right:40px" >User</span>

                                <input type="checkbox" id="checkbox-banned" onclick="search()">
                                <span>Banned</span>

                            </th>

                            <th class="text-center" colspan="2">
                                <select class="browser-default custom-select" id="search-selector">

                                    <option value="Username">Username</option>
                                    <option value="Email">Email</option>
                                    <option value="PhoneNumber">Phone Number</option>
                                    <option value="MemberSince">Member Since</option>

                                </select>

                            </th>
                        </tr>
                        <tr>

                            <th class="text-center custom-width-180">Username</th>
                            <th class="text-center custom-width-200">Email</th>
                            <th class="text-center custom-width-200">Phone Number</th>
                            <th class="text-center custom-width-200">Member Since</th>
                            <th class="text-center custom-width-150">Role</th>
                            <th class="text-left custom-width-150"></th>

                        </tr>
                        <tr></tr>
                    </thead>
                    <tbody class="table-hover">

                        <tr id="NoUsers" style="display: none">
                            <td class="text-center" colspan="6">
                                <h1>
                                    <strong>There is no such users.</strong>
                                </h1>
                            </td>
                        </tr>

                        <!-- List all users, but cuurrent logged user -->
                        @foreach (var user in this.Model.Users.Where(u => u.Username != this.User.Identity.Name))
                        {
                            <tr>
                                <td name="Username" class="text-center">@user.Username</td>
                                <td name="Email" class="text-center">@user.Email</td>
                                <td name="PhoneNumber" class="text-center">@user.PhoneNumber</td>
                                <td name="MemberSince" class="text-center ">@user.MemberSince.ToShortDateString()</td>
                                <td name="Role" class="text-center">@user.Role</td>

                                <td class="text-center ">

                                    <a asp-controller="UsersAdmin" asp-action="ShowUsersDetails" asp-route-id="@user.Id">
                                        <button class="btn btn-dark button-Register">Details</button>
                                    </a>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        }
        else
        {
            <h1 align="center">There are no users!</h1>

        }
    }
    else
    {
        <h1 align="center">There are no users!</h1>
    }

</body>



<script>
    let serachBox = document.getElementById("search-box");
    let serachSelector = document.getElementById("search-selector");
    let noUsersRow = document.getElementById("NoUsers");
    let searchText = "";

    let checkBoxAdmin = document.getElementById("checkbox-admin");
    let checkBoxUser = document.getElementById("checkbox-user");
    let checkBoxBanned = document.getElementById("checkbox-banned");

    let isAnyCheckBoxChecked = false;


    function search() {

        isAnyCheckBoxChecked = checkBoxAdmin.checked || checkBoxUser.checked || checkBoxBanned.checked;

        let searchElementsCategory = Array.from(document.getElementsByTagName("td"));

        searchText = serachBox.value;

        let isThereSuchElement = searchElementsCategory.find(element => getElement(element));


        if (isThereSuchElement) {

            searchElementsCategory.forEach(element => filterTheElements(element));
            noUsersRow.style.display = "none";

        } else {
            searchElementsCategory.forEach(element => filterTheElements(element));


            noUsersRow.style.display = "table-row";
        }


    }

    function filterTheElements(element) {


        if (isAnyCheckBoxChecked) {

            let roles = [];

            if (checkBoxAdmin.checked) {
                roles.push("Admin");

            } else if (checkBoxUser.checked) {
                roles.push("User");

            } else if (checkBoxBanned.checked) {
                roles.push("Banned");

            }


            if (element.getAttribute('name') === serachSelector.value) {

                let role = Array.from(element.parentElement.children).find(child => getRoleElement(child)).innerText;


                if (!element.innerText.toUpperCase().includes(searchText.toUpperCase()) ||
                    !roles.includes(role)) {

                    element.parentElement.style.display = "none";

                } else {

                    let isTheElementHidden = element.parentElement.style.display === "none";


                    if (isTheElementHidden) {

                        element.parentElement.style.display = "table-row";
                    }
                }

            }

        } else {


            if (element.getAttribute('name') === serachSelector.value) {

                if (!element.innerText.toUpperCase().includes(searchText.toUpperCase())) {

                    element.parentElement.style.display = "none";

                } else {

                    let isTheElementHidden = element.parentElement.style.display === "none";


                    if (isTheElementHidden) {

                        element.parentElement.style.display = "table-row";
                    }
                }

            }

        }

    }

    function getElement(element) {

        if (isAnyCheckBoxChecked) {

            let roles = [];

            if (checkBoxAdmin.checked) {
                roles.push("Admin");

            } else if (checkBoxUser.checked) {
                roles.push("User");

            } else if (checkBoxBanned.checked) {
                roles.push("Banned");

            }


            if (element.innerText.toUpperCase().includes(searchText.toUpperCase()) &&
                element.getAttribute('name') === serachSelector.value) {


                let role = Array.from(element.parentElement.children).find(child => getRoleElement(child)).innerText;

                return roles.includes(role);
            } else {

                return false;
            }

        } else {

            return element.innerText.toUpperCase().includes(searchText.toUpperCase()) &&
                element.getAttribute('name') === serachSelector.value;
        }
    }

    function getRoleElement(child) {
        return child.getAttribute('name') === "Role"
    }

</script>
